export enum NotificationType {
  TEAM_INVITE_REQUEST = "TEAM_INVITE_REQUEST",
  TEAM_INVITE_REQUEST_REJECTED = "TEAM_INVITE_REQUEST_REJECTED",
  TEAM_INVITE = "TEAM_INVITE",
  TEAM_INVITE_REJECTED = "TEAM_INVITE_REJECTED",
  TEAM_INVITE_ACCEPTED = "TEAM_INVITE_ACCEPTED",
  TEAM_CREATE_ENABLED = "TEAM_CREATE_ENABLED",
  TOURNAMENT_CONFIRM_SELECTION = 'TOURNAMENT_CONFIRM_SELECTION',
  TOURNAMENT_MATCH_CONFIRMED = 'TOURNAMENT_MATCH_CONFIRMED',
  TOURNAMENT_CANCEL_CONFIRMED = 'TOURNAMENT_CANCEL_CONFIRMED',
  TOURNAMENT_OPPONENT_CANCELLED = 'TOURNAMENT_OPPONENT_CANCELLED',
  TOURNAMENT_MATCH_REMINDER = 'TOURNAMENT_MATCH_REMINDER',
  TOURNAMENT_PLAYER_NOT_READY = 'TOURNAMENT_PLAYER_NOT_READY',
  TOURNAMENT_OPPONENT_NO_SHOW = 'TOURNAMENT_OPPONENT_NO_SHOW',
  TOURNAMENT_MATCH_WIN = 'TOURNAMENT_MATCH_WIN',
  TOURNAMENT_MATCH_LOSE = 'TOURNAMENT_MATCH_LOSE',
  TOURNAMENT_DISPUTE_SUCCESS = 'TOURNAMENT_DISPUTE_SUCCESS',
  TOURNAMENT_DISPUTE_DISQUALIFY = 'TOURNAMENT_DISPUTE_DISQUALIFY',
  TOURNAMENT_PLAYER_AUTO_GO_UP = 'TOURNAMENT_PLAYER_AUTO_GO_UP',
  TOURNAMENT_DISQUALIFIED = 'TOURNAMENT_DISQUALIFIED',
  TOURNAMENT_OPPONENT_DISQUALIFIED = 'TOURNAMENT_OPPONENT_DISQUALIFIED'
}

export interface NotificationTypeMeta {
  teamInviteRequestId?: string;
  teamInviteId?: string;
}

export interface NotificationModel {
  id: string;
  type: NotificationType;
  title: string;
  description?: string;
  targetUserId?: string;
  eventTime?: Date;
  avatarUrl?: string;
  username?: string;
  meta?: NotificationTypeMeta;
}
